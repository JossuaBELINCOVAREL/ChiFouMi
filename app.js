// S√©lection des √©l√©ments du DOM
const choices = document.querySelectorAll(".btn-choice"); // Les boutons de choix
const message = document.getElementById("message"); // Le message d'√©tat du jeu
const scoreJoueur = document.getElementById("score-joueur"); // Score du joueur
const scoreOrdinateur = document.getElementById("score-ordinateur"); // Score de l'ordinateur
const resetBtn = document.getElementById("reset"); // Le bouton pour r√©initialiser la partie
const joueurChoiceDisplay = document.getElementById("joueur-choice"); // Zone d'affichage du choix du joueur
const ordiChoiceDisplay = document.getElementById("ordi-choice"); // Zone d'affichage du choix de l'ordinateur

let scoreJ = 0; // Score du joueur
let scoreO = 0; // Score de l'ordinateur
const choixPossibles = ["pierre", "feuille", "ciseaux"]; // Les choix possibles pour l'ordinateur

// Fonction qui g√©n√®re un choix al√©atoire pour l'ordinateur
function choixOrdinateur() {
    return choixPossibles[Math.floor(Math.random() * choixPossibles.length)];
}

// Fonction pour g√©rer les clics sur les boutons de choix
function jouer(e) {
    let choixJoueur = e.currentTarget.id; // Le choix du joueur
    let choixOrdi = choixOrdinateur(); // Le choix de l'ordinateur

    // Affichage des choix du joueur et de l'ordinateur dans les zones d√©di√©es
    joueurChoiceDisplay.innerHTML = `<img src="assets/${choixJoueur}.png" alt="${choixJoueur}">`;
    ordiChoiceDisplay.innerHTML = `<img src="assets/${choixOrdi}.png" alt="${choixOrdi}">`;

    // Appel √† la fonction pour d√©terminer le gagnant
    let resultat = determinerGagnant(choixJoueur, choixOrdi);
    afficherResultat(resultat); // Affichage du r√©sultat du tour
}

// Fonction pour d√©terminer le gagnant
function determinerGagnant(joueur, ordinateur) {
    if (joueur === ordinateur) return "√âgalit√© ü§ù";
    if ((joueur === "pierre" && ordinateur === "ciseaux") || 
        (joueur === "feuille" && ordinateur === "pierre") || 
        (joueur === "ciseaux" && ordinateur === "feuille")) {
        scoreJ++;
        return "Vous gagnez ! üéâ";
    } else {
        scoreO++;
        return "L'ordinateur gagne ! ü§ñ";
    }
}

// Fonction pour afficher le r√©sultat final et mettre √† jour les scores
function afficherResultat(resultat) {
    scoreJoueur.textContent = scoreJ; // Mise √† jour du score du joueur
    scoreOrdinateur.textContent = scoreO; // Mise √† jour du score de l'ordinateur
    message.textContent = resultat; // Affichage du message de r√©sultat
}

// Fonction pour r√©initialiser le jeu
function resetGame() {
    scoreJ = 0;
    scoreO = 0;
    scoreJoueur.textContent = "0"; // R√©initialisation du score du joueur
    scoreOrdinateur.textContent = "0"; // R√©initialisation du score de l'ordinateur
    message.textContent = "Faites votre choix !"; // R√©initialisation du message
    joueurChoiceDisplay.innerHTML = "‚ùî"; // R√©initialisation du choix du joueur
    ordiChoiceDisplay.innerHTML = "‚ùî"; // R√©initialisation du choix de l'ordinateur
}

// Ajout des √©v√©nements aux boutons de choix
choices.forEach(choice => choice.addEventListener("click", jouer));

// Ajout de l'√©v√©nement pour r√©initialiser le jeu
resetBtn.addEventListener("click", resetGame);
